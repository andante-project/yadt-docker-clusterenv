#!/usr/bin/env python
import os
import subprocess

DOCKER_CLUSTERENV_HOME = "./docker-clusterenv"
PROJECT_DEFS_DIR = "projects"
PULL = "pull"
CLONE = "clone"
STATUS = "status"

REPO_CMDS = {
    "git": {
        PULL: ["git", "pull"],
        CLONE: ["git", "clone"],
        STATUS: ["git", "status"]
    },
    "svn": {
        PULL: ["svn", "up"],
        CLONE: ["svn", "co"],
        STATUS: ["svn", "status"]
    }
}

print "create/update workspace"
print "-- settings"
print "---- docker clusterenv: %s" % DOCKER_CLUSTERENV_HOME

project_def_files = os.listdir(PROJECT_DEFS_DIR)

print "-- external definitions"
print "---- %s" % " ".join(project_def_files)

print "-- updating local project"
subprocess.call(REPO_CMDS["git"][PULL])
subprocess.call(REPO_CMDS["git"][STATUS])

print "-- cloning/updating subprojects"
for project_def_file in project_def_files:
    with open(os.path.join(PROJECT_DEFS_DIR, project_def_file)) as project_defs:
        for project_def in project_defs:
            project_def = project_def.rstrip()
            if not project_def:
                continue
            try:
                tokens = project_def.split()
                type, url = tokens[0:2]
            except ValueError, e:
                print "-- [WARN] cannot handle project definition '%s'" % project_def
                print str(e)
                continue
            name = tokens[2] if len(tokens) > 2 else None

            if not name:
                name = os.path.splitext(os.path.basename(url))[0]

            print "---- %s" % name
            path = os.path.join(name)
            print "------ %s: %s <- %s" % (type, path, url)

            if os.path.exists(path):
                print "------ updating"
                cmd = REPO_CMDS[type][PULL]
                subprocess.call(cmd, cwd=path)
            else:
                print "------ cloning"
                cmd = REPO_CMDS[type][CLONE]
                subprocess.call(cmd + [url, name])
            cmd = REPO_CMDS[type][STATUS]
            subprocess.call(cmd, cwd=path)
            print

print "done."
